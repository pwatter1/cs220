NUM_NODES   10      = 0 sec, 000001 micro sec
Reverse.ASM 100     = 0 sec, 000001 micro sec
            1000    = 0 sec, 000005 micro sec
	    10000   = 0 sec, 000096 micro sec
	    100000  = 0 sec, 000398 micro sec
	    1000000 = 0 sec, 003102 micro sec


NUM_NODES   10      = 0 sec, 000001 micro sec
Reverse.C   100     = 0 sec, 000002 micro sec
            1000    = 0 sec, 000010 micro sec
	    10000   = 0 sec, 000096 micro sec
	    100000  = 0 sec, 000910 micro sec
	    1000000 = 0 sec, 006680 micro sec

COMMENT: The reason one takes longer than the other is the difference in number of instructions. Assembly statements has more direct mapping to machine code instructions so it needs less to complete the same task. C compilers usually has more translation needed to map the statments to machine instructions.


OPTOMISED
W/ -O2
NUM_NODES   10      = 0 sec, 000001 micro sec
Reverse.ASM 100     = 0 sec, 000001 micro sec
            1000    = 0 sec, 000004 micro sec
	    10000   = 0 sec, 000040 micro sec
	    100000  = 0 sec, 000394 micro sec
	    1000000 = 0 sec, 003295 micro sec

W/ -O2
NUM_NODES   10      = 0 sec, 000001 micro sec
Reverse.C   100     = 0 sec, 000000 micro sec
            1000    = 0 sec, 000004 micro sec
	    10000   = 0 sec, 000039 micro sec
	    100000  = 0 sec, 000390 micro sec
	    1000000 = 0 sec, 003177 micro sec

COMMENT: How reverse_asm can be made faster?


# of instructions in reverse_asm = 10
# of instructions in reverse_asm with -O2= 10
# of instructions in reverse_c with -O2 = 18
# of instructions in reverse_c not optomised = 33
